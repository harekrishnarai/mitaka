import { ok } from "neverthrow";

import type { SearchableType } from "~/schemas";
import { MD5_LENGTH, SHA1_LENGTH, SHA256_LENGTH } from "~/types";
import { buildURL } from "~/utils";

import { Base } from "./base";

export class MalwareBazaar extends Base {
  public baseURL: string;
  public name: string;
  public supportedTypes: SearchableType[] = ["hash"];

  public constructor() {
    super();
    this.baseURL = "https://bazaar.abuse.ch";
    this.name = "MalwareBazaar";
  }

  public searchByHash(query: string) {
    if (query.length === MD5_LENGTH) {
      return this.searchByMD5(query);
    }

    if (query.length === SHA1_LENGTH) {
      return this.searchBySHA1(query);
    }

    if (query.length === SHA256_LENGTH) {
      return this.searchBySHA256(query);
    }

    return ok(buildURL(this.baseURL, "/browse.php", { search: query }));
  }

  private searchByMD5(query: string) {
    const search = `md5:${query}`;
    return ok(buildURL(this.baseURL, "/browse.php", { search }));
  }

  private searchBySHA1(query: string) {
    const search = `sha1:${query}`;
    return ok(buildURL(this.baseURL, "/browse.php", { search }));
  }

  private searchBySHA256(query: string) {
    const search = `sha256:${query}`;
    return ok(buildURL(this.baseURL, "/browse.php", { search }));
  }
}
